name: CI/CD Pipeline

on: [push, pull_request, workflow_dispatch]

jobs:
  ci:
    name: Continuous Integration
    runs-on: windows-latest
    outputs:
      new_version: ${{ steps.determine_project_version.outputs.new_version }}
    steps:
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Build and test SmartEnum project
        id: build_and_test_smartenum_project
        shell: pwsh
        run: |
          dotnet build .\src\SmartEnum\SmartEnum.csproj --configuration Release --output Artifacts
          dotnet test .\test\SmartEnum.UnitTests\SmartEnum.UnitTests.csproj --configuration Release --no-build
      - name: Determine project version
        id: determine_project_version
        shell: pwsh
        run: |
          $latestGitVersion = (git tag --list 'SmartEnum-*' --sort=-committerdate)[0] -replace 'SmartEnum-v', ''
          $filePath = (Get-ChildItem .\src\SmartEnum\SmartEnum.csproj).FullName
          $projectVersion = [String](([xml](Get-Content $filePath)).Project.PropertyGroup.Version)
          $newVersion = ''
          $isNewTag = 'false'
          $versionsList = ($projectVersion, $latestGitVersion)

          if ( $projectVersion -ne $latestGitVersion -and $projectVersion -eq ($versionsList | Sort { [Version] $_ } -Descending)[0] ) {
            $newVersion = $projectVersion
            $isNewTag = 'true'
            $smartEnumTag = "SmartEnum-v$newVersion" -replace '\s', ''
          }

          Write-Output "::set-output name=new_version::$(echo $newVersion)"
          Write-Output "::set-output name=is_new_tag::$(echo $isNewTag)"
          
  cd:
    name: Continuous Deployment
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Create and publish release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: SmartEnum ${{ needs.ci.outputs.new_version }}
          tag_name: SmartEnum-v${{ needs.ci.outputs.outputs.new_version}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
